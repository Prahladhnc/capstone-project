{"instruction": "Generate a question for Unit 1: Introduction to Finite Automata. Topics include: DFA, NFA, Automata Theory", "input": "", "output": "Design a Deterministic Finite Automaton (DFA) to accept i) strings consisting of even number of 0’s and even number of 1’s ii) strings starting with a prefix ab iii) strings containing 001 as a substring."}
{"instruction": "Generate a question for Unit 1: Introduction to Finite Automata. Topics include: DFA, NFA, Automata Theory", "input": "", "output": "Convert the following NFA to its equivalent DFA."}
{"instruction": "Generate a question for Unit 1: Introduction to Finite Automata. Topics include: DFA, NFA, Automata Theory", "input": "", "output": "Convert the given λ-NFA to DFA and explain the conversion steps theoretically."}
{"instruction": "Generate a question for Unit 1: Introduction to Finite Automata. Topics include: DFA, NFA, Automata Theory", "input": "", "output": "Consider the given language L = {w, w mod 5=0, ∑ = {0, 1} and Construct a DFA which accepts strings of 0’s & 1’s where each string is represented as binary number."}
{"instruction": "Generate a question for Unit 1: Introduction to Finite Automata. Topics include: DFA, NFA, Automata Theory", "input": "", "output": "Design a DFA to accepting the following strings over the alphabet{a,b} i. The set of strings with odd number of ‘a’ and even number of ‘b’ ii. The set of strings which either start or end with ba."}
{"instruction": "Generate a question for Unit 1: Introduction to Finite Automata. Topics include: DFA, NFA, Automata Theory", "input": "", "output": "Consider the given language L = {w, w mod 5=0, ∑ = {0, 1} and Construct a DFA which accepts strings of 0’s & 1’s where each string is represented as binary number."}
{"instruction": "Generate a question for Unit 1: Introduction to Finite Automata. Topics include: DFA, NFA, Automata Theory", "input": "", "output": "Obtain an NFA to accept the language L={ababn or aban , n >=0}"}
{"instruction": "Generate a question for Unit 1: Introduction to Finite Automata. Topics include: DFA, NFA, Automata Theory", "input": "", "output": "Convert the following NFA to its equivalent DFA and Elaborate the conversion of steps in detail."}
{"instruction": "Generate a question for Unit 1: Introduction to Finite Automata. Topics include: DFA, NFA, Automata Theory", "input": "", "output": "Obtain the NFA to accept strings of a’s and b’s ending with ab or ba. Using the resultant NFA obtain an equivalent DFA."}
{"instruction": "Generate a question for Unit 2: Regular Languages and Expressions. Topics include: Regular Expressions, Automata and Applications", "input": "", "output": "Write the Regular Expression (RE) to accept set of all strings i) over the alphabet {a,b,c} consisting of atleast one ‘a’ and atleast one ‘b’ ii) over the alphabet {0,1} where every pair of adjacent 0’s appear before any pair of adjacent 1’s."}
{"instruction": "Generate a question for Unit 2: Regular Languages and Expressions. Topics include: Regular Expressions, Automata and Applications", "input": "", "output": "Convert the given RE to its equivalent NFA with λ transitions i) (0+1)*1(0+1) ii) (a+bb)*(ba*+ λ)."}
{"instruction": "Generate a question for Unit 2: Regular Languages and Expressions. Topics include: DFA Minimization and Regular Expressions", "input": "", "output": "Minimize the given DFA by applying suitable procedure."}
{"instruction": "Generate a question for Unit 2: Regular Languages and Expressions. Topics include: Regular Expressions", "input": "", "output": "Write the equivalent regular expression for the language L ={ a2nb 2m , n, m >=0}."}
{"instruction": "Generate a question for Unit 2: Regular Languages and Expressions. Topics include: Regular Expressions", "input": "", "output": "Derive the regular expression to accept the string of a’s and b’s having total length less than or equal to 0."}
{"instruction": "Generate a question for Unit 2: Regular Languages and Expressions. Topics include: DFA and NFA", "input": "", "output": "Construct a ε-NFA to accept the regular language: (0+1)*+1."}
{"instruction": "Generate a question for Unit 3: Context Free Grammars and Languages. Topics include: CFG", "input": "", "output": "Design Context Free Grammar (CFG) to accept the following languages i. L = { anb n-4 , n >= 4} ii. L = {0i1 j , i ≠ j , i >= 0 , j >=0 }."}
{"instruction": "Generate a question for Unit 3: Context Free Grammars and Languages. Topics include: Ambiguity and CNF Conversion", "input": "", "output": "Check whether the given grammar is ambiguous or not. If not then, convert it into CNF form by applying the sequence of conversion steps accordingly: S → ASB | λ, A → aAS | a, B → SbS | A | bb."}
{"instruction": "Generate a question for Unit 3: Context Free Grammars and Languages. Topics include: CFL", "input": "", "output": "Prove that the language is not a Context Free Language (CFL). L = {aib ic i | i>=0}."}
{"instruction": "Generate a question for Unit 3: Context Free Grammars and Languages. Topics include: CNF Conversion", "input": "", "output": "Convert the given Context Free Grammar (CFG) to Chomsky Normal Form (CNF): S →ASB, A→aAS | a | ε, B → SbS | A | bb."}
{"instruction": "Generate a question for Unit 3: Context Free Grammars and Languages. Topics include: CFL Closure Properties", "input": "", "output": "If L1 & L2 are two Context Free Languages, then show that the L1UL2, L1.L2, L1* are also Context Free and are closed."}
{"instruction": "Generate a question for Unit 3: Context Free Grammars and Languages. Topics include: Ambiguity", "input": "", "output": "Show that the given grammar is ambiguous: S →A|B, A → aAb | ε, B → abB | ε."}
{"instruction": "Generate a question for Unit 4: Pushdown Automata (PDA). Topics include: PDA Design", "input": "", "output": "Define Push Down Automata (PDA). Design a PDA which accepts equal number of a’s and b’s over ∑ = {a,b}."}
{"instruction": "Generate a question for Unit 4: Pushdown Automata (PDA). Topics include: PDA to CFG Conversion", "input": "", "output": "Consider the transition functions given below and convert the PDA: P = ({p,q}, {0,1}, {X,Z}, δ, q, Z) to its equivalent CFG representation. δ(q, 1, Z) = (q, XZ), δ(q, 1, X) = (q, XX), δ(q, λ , X) = (q, λ), δ(q, 0, X) = (p, X), δ(p, 1, X) = (p, λ), δ(p, 0, Z) = (q, Z)."}
{"instruction": "Generate a question for Unit 4: Pushdown Automata (PDA). Topics include: PDA Conversion", "input": "", "output": "Obtain PDA for the given CFG by applying suitable conversion procedures: S → aABC, A → aB | a, B → bA | b, C → a."}
{"instruction": "Generate a question for Unit 4: Pushdown Automata (PDA). Topics include: NPDA for Balanced Parentheses", "input": "", "output": "Design a Non-Deterministic PDA (NPDA) for accepting balanced parenthesis. Using the Instantaneous Descriptions, show that the resultant NPDA will accept the string ([ ])[ ]."}
{"instruction": "Generate a question for Unit 4: Pushdown Automata (PDA). Topics include: PDA Design", "input": "", "output": "Construct a Push Down Automata (PDA) that accepts the language L={ an b mc n+m | n, m>=1}."}
{"instruction": "Generate a question for Unit 4: Pushdown Automata (PDA). Topics include: CFG to PDA Conversion", "input": "", "output": "Convert the given CFG: S → aSa | bSb | c to an equivalent PDA and show the instantaneous descriptions for the input string 'abbccbba' when applied on the resultant PDA."}
{"instruction": "Generate a question for Unit 4: Pushdown Automata (PDA). Topics include: NPDA Design", "input": "", "output": "Design Non-Deterministic Pushdown Automata (NPDA) to accept the language L={ WWR over the alphabets ∑ ={a,b}}."}
{"instruction": "Generate a question for Unit 4: Pushdown Automata (PDA). Topics include: PDA to CFG Conversion", "input": "", "output": "Convert the given PDA transitions to its equivalent CFG representation: f(q0, a, Z) = (q0, AZ), f(q0, a, A) = (q0, A), f(q0,b,A) = (q0, ε), f(q1, ε, Z )= (q2, ε )."}
{"instruction": "Generate a question for Unit 4: Pushdown Automata (PDA). Topics include: PDA Types", "input": "", "output": "Differentiate between Deterministic PDA and NPDA."}
{"instruction": "Generate a question for Unit 5: Turing Machines and Computability. Topics include: Turing Machine Design", "input": "", "output": "Design a Turing Machine to accept the language L(M) = {0n1 n2 n | n>=1}."}
{"instruction": "Generate a question for Unit 5: Turing Machines and Computability. Topics include: Turing Machine Types", "input": "", "output": "Differentiate between i) Multi-tape and Multi-dimensional Turing Machine ii) Deterministic and Non-Deterministic Turing Machines."}
{"instruction": "Generate a question for Unit 5: Turing Machines and Computability. Topics include: Turing Machine Design", "input": "", "output": "Design a Turing machine to accept the language L = {0n 1 n where n >=1}."}
{"instruction": "Generate a question for Unit 5: Turing Machines and Computability. Topics include: Turing Machine Design", "input": "", "output": "Obtain Turing machine to accept strings of a’s and b’s on the string w having Na(w) equal to Nb(w)."}